const char* ocl_src_inputFile =
"#define M_2_PI 6.283185307179586476925286766559f\n"
"#define M_PI_2 1.5707963267948966192313216916398f\n"
"#define M_PI 3.1415926535897932384626433832795f\n"
"kernel void mandelbrot(\n"
"write_only image2d_t output_image,\n"
"const float x_min,\n"
"const float x_max,\n"
"const float y_min,\n"
"const float y_max,\n"
"const uint max_iterations\n"
")\n"
"{\n"
"float x0=((float)get_global_id(0)/(float)get_global_size(0))*(x_max-x_min)+x_min;\n"
"float y0=((float)get_global_id(1)/(float)get_global_size(1))*(y_max-y_min)+y_min;\n"
"float x=0.0f;\n"
"float y=0.0f;\n"
"uint iteration=0;\n"
"float temp=0.0f;\n"
"while((x*x+y*y<2.0f*2.0f)&&(iteration<max_iterations))\n"
"{\n"
"temp=x*x-y*y+x0;\n"
"y=2.0f*x*y+y0;\n"
"x=temp;\n"
"iteration=iteration+1;\n"
"}\n"
"float quotient=(float)iteration/(float)max_iterations;\n"
"write_imagef(output_image,(int2)(get_global_id(0),get_global_id(1)),(float4)(\n"
"0.5f*sin(M_2_PI*quotient-M_PI)+0.5f,\n"
"0.5f*sin(M_2_PI*quotient-M_PI_2)+0.5f,\n"
"0.5f*sin(M_2_PI*quotient)+0.5f,\n"
"1.0f\n"
"));\n"
"}";
